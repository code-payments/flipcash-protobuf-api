syntax = "proto3";

package flipcash.pool.v1;

option go_package = "github.com/code-payments/flipcash-protobuf-api/generated/go/pool/v1;poolpb";
option java_package = "com.codeinc.flipcash.gen.pool.v1";
option objc_class_prefix = "FPBPoolV1";

import "pool/v1/model.proto";
import "common/v1/common.proto";
import "validate/validate.proto";

service Pool {
    // CreatePool creates a new pool
    rpc CreatePool(CreatePoolRequest) returns (CreatePoolResponse);

    // GetPool gets pool metadata by its ID
    rpc GetPool(GetPoolRequest) returns (GetPoolResponse);

    // MakeBet creates a new bet against a pool. Pool participants make a bet by
    // calling MakeBet to create an initially unpaid bet, then SubmitIntent for
    // payment where intent ID == bet ID and payment amount == buy in. Bets without
    // payment, or with invalid intents, will not be visible in the PoolMetadata
    // when calling GetPool.
    rpc MakeBet(MakeBetRequest) returns (MakeBetResponse);
}

message CreatePoolRequest {
    PoolMetadata pool = 1 [(validate.rules).message.required = true];

    common.v1.Auth auth = 2 [(validate.rules).message.required = true];
}

message CreatePoolResponse {
    enum Result {
        OK                         = 0;
        RENDEZVOUS_EXISTS          = 1;
        FUNDING_DESTINATION_EXISTS = 2;
    }
}

message GetPoolRequest {
    PoolId id = 1;
}

message GetPoolResponse {
    enum Result {
        OK        = 0;
        NOT_FOUND = 1;
    }

    PoolMetadata pool = 2;
}

message MakeBetRequest {
    PoolId pool_id = 1 [(validate.rules).message.required = true];

    BetMetadata bet = 2 [(validate.rules).message.required = true];

    common.v1.Auth auth = 3 [(validate.rules).message.required = true];
}

message MakeBetResponse {
    enum Result {
        OK               = 0;
        POOL_NOT_FOUND   = 1;
        POOL_CLOSED      = 2;
        BET_ALREADY_MADE = 3;
    }
}
