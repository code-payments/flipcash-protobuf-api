syntax = "proto3";

package flipcash.iap.v1;

option go_package = "github.com/code-payments/flipcash-protobuf-api/generated/go/iap/v1;iappb";
option java_package = "com.codeinc.flipcash.gen.iap.v1";
option objc_class_prefix = "FPBIapV1";

import "common/v1/common.proto";
import "validate/validate.proto";

service Iap {
    // OnPurchaseCompleted is called when an IAP has been completed
    rpc OnPurchaseCompleted(OnPurchaseCompletedRequest) returns (OnPurchaseCompletedResponse);
}

message OnPurchaseCompletedRequest {
    common.v1.Platform platform = 1 [(validate.rules).enum = {in: [1,2]}];

    Receipt receipt = 2 [(validate.rules).message.required = true];

    Metadata metadata = 3 [(validate.rules).message.required = true];

    common.v1.Auth auth = 4 [(validate.rules).message.required = true];
}

message OnPurchaseCompletedResponse {
    Result result = 1;
    enum Result {
        OK               = 0;
        DENIED           = 1;
        INVALID_RECEIPT  = 2; // Returned if the receipt is invalid, or not in a completed payment state
        INVALID_METADATA = 3; // Returned if the at least one field in the payment metadata is invalid
    }
}

message Receipt {
    string value = 1 [(validate.rules).string = {
        min_len: 1
        // todo: what's a reasonable max length?
    }];
}

// Additional IAP metadata, which can be trusted given a verified receipt (they can
// only be generated by production-signed apps).
message Metadata {
    string product = 1 [(validate.rules).string = {
        min_len: 1
        max_len: 128
    }];

    string currency = 2 [(validate.rules).string = {
        pattern: "^[a-z]{3}$"
    }];

    double amount = 3 [(validate.rules).double.gt = 0];
}
