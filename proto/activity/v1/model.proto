syntax = "proto3";

package flipcash.activity.v1;

option go_package = "github.com/code-payments/flipcash-protobuf-api/generated/go/activity/v1;activitypb";
option java_package = "com.codeinc.flipcash.gen.activity.v1";
option objc_class_prefix = "FCPBActivityV1";

import "common/v1/common.proto";
import "pool/v1/model.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

// The ID of the notification
message NotificationId {
    bytes value = 1 [(validate.rules).bytes = {
        min_len: 32
        max_len: 32
    }];
}

// Notification is a message that is displayed in an activity feed
message Notification {
    // The ID of this notification
    NotificationId id = 1 [(validate.rules).message.required = true];

    // The localized title text for the notification
    string localized_text = 2 [(validate.rules).string = {
        min_len: 1
        max_len: 256
    }];

    // If a payment applies, the amount that was paid
    common.v1.CryptoPaymentAmount payment_amount = 3;

    // The timestamp of this notification
    google.protobuf.Timestamp ts = 4 [(validate.rules).timestamp.required = true];

    // The state of this notification
    NotificationState state = 10 [(validate.rules).enum.not_in = 0];

    // Additional metadata for this notification specific to the notification
    oneof additional_metadata {
        WelcomeBonusNotificationMetadata      welcome_bonus      = 5;
        GaveCryptoNotificationMetadata        gave_crypto        = 6;
        ReceivedCryptoNotificationMetadata    received_crypto    = 7;
        WithdrewCryptoNotificationMetadata    withdrew_crypto    = 8;
        SentCryptoNotificationMetadata        sent_crypto        = 9;
        DepositedCryptoNotificationMetadata   deposited_crypto   = 11;
        PaidCryptoNotificationMetadata        paid_crypto        = 12;
        DistributedCryptoNotificationMetadata distributed_crypto = 13;
    }
}

message WelcomeBonusNotificationMetadata {
}

message GaveCryptoNotificationMetadata {
}

message ReceivedCryptoNotificationMetadata {
}

message WithdrewCryptoNotificationMetadata {
}

message SentCryptoNotificationMetadata {
    // The vault of the gift card account that was created for the cash link
    common.v1.PublicKey vault = 1 [(validate.rules).message.required = true];

    // Whether the cancel action can be initiated by the user
    bool can_initiate_cancel_action = 2;
}

message DepositedCryptoNotificationMetadata {
}

message PaidCryptoNotificationMetadata {
    oneof payment_metadata {
        option (validate.required) = true;

        PoolPaymentMetadata pool = 1;
    }

    // Payment metadata for betting pools
    message PoolPaymentMetadata {
        // The pool that was entered for this payment
        pool.v1.PoolId pool_id = 1 [(validate.rules).message.required = true];
    }
}

message DistributedCryptoNotificationMetadata {
    oneof distribution_metadata {
        option (validate.required) = true;

        PoolDistributionMetadata pool = 1;
    }

    // Distribution metadata for betting pools
    message PoolDistributionMetadata {
        // The pool where funds were distributed from
        pool.v1.PoolId pool_id = 1 [(validate.rules).message.required = true];

        // The outcome for this pool for the user that indicates the reason for
        // receiving the distribution.
        pool.v1.UserOutcome outcome = 2 [(validate.rules).enum = {
            in: [2, 4] // WIN_OUTCOME, REFUND_OUTCOME
        }];
    }
}

// ActivityFeedType enables multiple activity feeds, where notifications may be
// split across different parts of the app
enum ActivityFeedType {
    UNKNOWN             = 0;
    TRANSACTION_HISTORY = 1; // Activity feed displayed under the Balance tab
}

// NotificationState determines the mutability of a notification, and whether
// client should attempt to refetch state.
enum NotificationState {
    NOTIFICATION_STATE_UNKNOWN   = 0;
    // Notification state will change based on some app action in the future
    NOTIFICATION_STATE_PENDING   = 1;
    // Notification state will not change
    NOTIFICATION_STATE_COMPLETED = 2;
}
