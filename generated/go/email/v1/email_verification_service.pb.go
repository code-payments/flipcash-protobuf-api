// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: email/v1/email_verification_service.proto

package emailpb

import (
	v1 "github.com/code-payments/flipcash-protobuf-api/generated/go/common/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendVerificationCodeResponse_Result int32

const (
	SendVerificationCodeResponse_OK SendVerificationCodeResponse_Result = 0
	// Email is denied
	SendVerificationCodeResponse_DENIED SendVerificationCodeResponse_Result = 1
	// Email is rate limited (eg. by IP, email address, user, etc) and was not sent.
	SendVerificationCodeResponse_RATE_LIMITED SendVerificationCodeResponse_Result = 2
	// The email address is not real
	SendVerificationCodeResponse_INVALID_EMAIL_ADDRESS SendVerificationCodeResponse_Result = 3
)

// Enum value maps for SendVerificationCodeResponse_Result.
var (
	SendVerificationCodeResponse_Result_name = map[int32]string{
		0: "OK",
		1: "DENIED",
		2: "RATE_LIMITED",
		3: "INVALID_EMAIL_ADDRESS",
	}
	SendVerificationCodeResponse_Result_value = map[string]int32{
		"OK":                    0,
		"DENIED":                1,
		"RATE_LIMITED":          2,
		"INVALID_EMAIL_ADDRESS": 3,
	}
)

func (x SendVerificationCodeResponse_Result) Enum() *SendVerificationCodeResponse_Result {
	p := new(SendVerificationCodeResponse_Result)
	*p = x
	return p
}

func (x SendVerificationCodeResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendVerificationCodeResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_email_v1_email_verification_service_proto_enumTypes[0].Descriptor()
}

func (SendVerificationCodeResponse_Result) Type() protoreflect.EnumType {
	return &file_email_v1_email_verification_service_proto_enumTypes[0]
}

func (x SendVerificationCodeResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendVerificationCodeResponse_Result.Descriptor instead.
func (SendVerificationCodeResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_email_v1_email_verification_service_proto_rawDescGZIP(), []int{1, 0}
}

type CheckVerificationCodeResponse_Result int32

const (
	CheckVerificationCodeResponse_OK     CheckVerificationCodeResponse_Result = 0
	CheckVerificationCodeResponse_DENIED CheckVerificationCodeResponse_Result = 1
	// The call is rate limited (eg. by IP, email address, etc). The code is
	// not verified.
	CheckVerificationCodeResponse_RATE_LIMITED CheckVerificationCodeResponse_Result = 2
	// The provided verification code is invalid. The user may retry
	// enterring the code if this is received. When max attempts are
	// received, NO_VERIFICATION will be returned.
	CheckVerificationCodeResponse_INVALID_CODE CheckVerificationCodeResponse_Result = 3
	// There is no verification in progress for the email address. Several
	// reasons this can occur include a verification being expired or having
	// reached a maximum check threshold. The client must initiate a new
	// verification using SendVerificationCode.
	CheckVerificationCodeResponse_NO_VERIFICATION CheckVerificationCodeResponse_Result = 4
)

// Enum value maps for CheckVerificationCodeResponse_Result.
var (
	CheckVerificationCodeResponse_Result_name = map[int32]string{
		0: "OK",
		1: "DENIED",
		2: "RATE_LIMITED",
		3: "INVALID_CODE",
		4: "NO_VERIFICATION",
	}
	CheckVerificationCodeResponse_Result_value = map[string]int32{
		"OK":              0,
		"DENIED":          1,
		"RATE_LIMITED":    2,
		"INVALID_CODE":    3,
		"NO_VERIFICATION": 4,
	}
)

func (x CheckVerificationCodeResponse_Result) Enum() *CheckVerificationCodeResponse_Result {
	p := new(CheckVerificationCodeResponse_Result)
	*p = x
	return p
}

func (x CheckVerificationCodeResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckVerificationCodeResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_email_v1_email_verification_service_proto_enumTypes[1].Descriptor()
}

func (CheckVerificationCodeResponse_Result) Type() protoreflect.EnumType {
	return &file_email_v1_email_verification_service_proto_enumTypes[1]
}

func (x CheckVerificationCodeResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckVerificationCodeResponse_Result.Descriptor instead.
func (CheckVerificationCodeResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_email_v1_email_verification_service_proto_rawDescGZIP(), []int{3, 0}
}

type UnlinkResponse_Result int32

const (
	UnlinkResponse_OK     UnlinkResponse_Result = 0
	UnlinkResponse_DENIED UnlinkResponse_Result = 1
)

// Enum value maps for UnlinkResponse_Result.
var (
	UnlinkResponse_Result_name = map[int32]string{
		0: "OK",
		1: "DENIED",
	}
	UnlinkResponse_Result_value = map[string]int32{
		"OK":     0,
		"DENIED": 1,
	}
)

func (x UnlinkResponse_Result) Enum() *UnlinkResponse_Result {
	p := new(UnlinkResponse_Result)
	*p = x
	return p
}

func (x UnlinkResponse_Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnlinkResponse_Result) Descriptor() protoreflect.EnumDescriptor {
	return file_email_v1_email_verification_service_proto_enumTypes[2].Descriptor()
}

func (UnlinkResponse_Result) Type() protoreflect.EnumType {
	return &file_email_v1_email_verification_service_proto_enumTypes[2]
}

func (x UnlinkResponse_Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnlinkResponse_Result.Descriptor instead.
func (UnlinkResponse_Result) EnumDescriptor() ([]byte, []int) {
	return file_email_v1_email_verification_service_proto_rawDescGZIP(), []int{5, 0}
}

type SendVerificationCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The email address to send a verification code to
	EmailAddress *EmailAddress `protobuf:"bytes,1,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	Auth         *v1.Auth      `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	// Additional client data that is sent in the deep link
	ClientData string `protobuf:"bytes,3,opt,name=client_data,json=clientData,proto3" json:"client_data,omitempty"`
}

func (x *SendVerificationCodeRequest) Reset() {
	*x = SendVerificationCodeRequest{}
	mi := &file_email_v1_email_verification_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendVerificationCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVerificationCodeRequest) ProtoMessage() {}

func (x *SendVerificationCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_email_v1_email_verification_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVerificationCodeRequest.ProtoReflect.Descriptor instead.
func (*SendVerificationCodeRequest) Descriptor() ([]byte, []int) {
	return file_email_v1_email_verification_service_proto_rawDescGZIP(), []int{0}
}

func (x *SendVerificationCodeRequest) GetEmailAddress() *EmailAddress {
	if x != nil {
		return x.EmailAddress
	}
	return nil
}

func (x *SendVerificationCodeRequest) GetAuth() *v1.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SendVerificationCodeRequest) GetClientData() string {
	if x != nil {
		return x.ClientData
	}
	return ""
}

type SendVerificationCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result SendVerificationCodeResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=flipcash.email.v1.SendVerificationCodeResponse_Result" json:"result,omitempty"`
}

func (x *SendVerificationCodeResponse) Reset() {
	*x = SendVerificationCodeResponse{}
	mi := &file_email_v1_email_verification_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendVerificationCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVerificationCodeResponse) ProtoMessage() {}

func (x *SendVerificationCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_email_v1_email_verification_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVerificationCodeResponse.ProtoReflect.Descriptor instead.
func (*SendVerificationCodeResponse) Descriptor() ([]byte, []int) {
	return file_email_v1_email_verification_service_proto_rawDescGZIP(), []int{1}
}

func (x *SendVerificationCodeResponse) GetResult() SendVerificationCodeResponse_Result {
	if x != nil {
		return x.Result
	}
	return SendVerificationCodeResponse_OK
}

type CheckVerificationCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The email address being verified
	EmailAddress *EmailAddress `protobuf:"bytes,1,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	// The verification code received via email
	Code *VerificationCode `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Auth *v1.Auth          `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *CheckVerificationCodeRequest) Reset() {
	*x = CheckVerificationCodeRequest{}
	mi := &file_email_v1_email_verification_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckVerificationCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckVerificationCodeRequest) ProtoMessage() {}

func (x *CheckVerificationCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_email_v1_email_verification_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckVerificationCodeRequest.ProtoReflect.Descriptor instead.
func (*CheckVerificationCodeRequest) Descriptor() ([]byte, []int) {
	return file_email_v1_email_verification_service_proto_rawDescGZIP(), []int{2}
}

func (x *CheckVerificationCodeRequest) GetEmailAddress() *EmailAddress {
	if x != nil {
		return x.EmailAddress
	}
	return nil
}

func (x *CheckVerificationCodeRequest) GetCode() *VerificationCode {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *CheckVerificationCodeRequest) GetAuth() *v1.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

type CheckVerificationCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result CheckVerificationCodeResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=flipcash.email.v1.CheckVerificationCodeResponse_Result" json:"result,omitempty"`
}

func (x *CheckVerificationCodeResponse) Reset() {
	*x = CheckVerificationCodeResponse{}
	mi := &file_email_v1_email_verification_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckVerificationCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckVerificationCodeResponse) ProtoMessage() {}

func (x *CheckVerificationCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_email_v1_email_verification_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckVerificationCodeResponse.ProtoReflect.Descriptor instead.
func (*CheckVerificationCodeResponse) Descriptor() ([]byte, []int) {
	return file_email_v1_email_verification_service_proto_rawDescGZIP(), []int{3}
}

func (x *CheckVerificationCodeResponse) GetResult() CheckVerificationCodeResponse_Result {
	if x != nil {
		return x.Result
	}
	return CheckVerificationCodeResponse_OK
}

type UnlinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The email address to unlink
	EmailAddress *EmailAddress `protobuf:"bytes,1,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	Auth         *v1.Auth      `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *UnlinkRequest) Reset() {
	*x = UnlinkRequest{}
	mi := &file_email_v1_email_verification_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkRequest) ProtoMessage() {}

func (x *UnlinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_email_v1_email_verification_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkRequest.ProtoReflect.Descriptor instead.
func (*UnlinkRequest) Descriptor() ([]byte, []int) {
	return file_email_v1_email_verification_service_proto_rawDescGZIP(), []int{4}
}

func (x *UnlinkRequest) GetEmailAddress() *EmailAddress {
	if x != nil {
		return x.EmailAddress
	}
	return nil
}

func (x *UnlinkRequest) GetAuth() *v1.Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

type UnlinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result UnlinkResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=flipcash.email.v1.UnlinkResponse_Result" json:"result,omitempty"`
}

func (x *UnlinkResponse) Reset() {
	*x = UnlinkResponse{}
	mi := &file_email_v1_email_verification_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkResponse) ProtoMessage() {}

func (x *UnlinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_email_v1_email_verification_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkResponse.ProtoReflect.Descriptor instead.
func (*UnlinkResponse) Descriptor() ([]byte, []int) {
	return file_email_v1_email_verification_service_proto_rawDescGZIP(), []int{5}
}

func (x *UnlinkResponse) GetResult() UnlinkResponse_Result {
	if x != nil {
		return x.Result
	}
	return UnlinkResponse_OK
}

var File_email_v1_email_verification_service_proto protoreflect.FileDescriptor

var file_email_v1_email_verification_service_proto_rawDesc = []byte{
	0x0a, 0x29, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x66, 0x6c, 0x69,
	0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x16,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66,
	0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x29, 0x0a,
	0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x18, 0x80, 0x08, 0x52, 0x0a, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb9, 0x01, 0x0a, 0x1c, 0x53, 0x65, 0x6e,
	0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x66, 0x6c, 0x69, 0x70,
	0x63, 0x61, 0x73, 0x68, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x49, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44,
	0x45, 0x4e, 0x49, 0x45, 0x44, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x41, 0x54, 0x45, 0x5f,
	0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45,
	0x53, 0x53, 0x10, 0x03, 0x22, 0xe9, 0x01, 0x0a, 0x1c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66,
	0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x41, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73,
	0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x22, 0xc7, 0x01, 0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x37, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x55, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f, 0x5f, 0x56, 0x45, 0x52, 0x49,
	0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x22, 0x97, 0x01, 0x0a, 0x0d, 0x55,
	0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0d,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0c,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6c, 0x69,
	0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x22, 0x70, 0x0a, 0x0e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73,
	0x68, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1c, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45,
	0x4e, 0x49, 0x45, 0x44, 0x10, 0x01, 0x32, 0xd7, 0x02, 0x0a, 0x11, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x77, 0x0a, 0x14,
	0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x15, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2f,
	0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x06, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x20, 0x2e, 0x66, 0x6c,
	0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x7e, 0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x69, 0x6e, 0x63, 0x2e,
	0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x2e, 0x76, 0x31, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f,
	0x67, 0x6f, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x70, 0x62, 0xa2, 0x02, 0x0a, 0x46, 0x50, 0x42, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_email_v1_email_verification_service_proto_rawDescOnce sync.Once
	file_email_v1_email_verification_service_proto_rawDescData = file_email_v1_email_verification_service_proto_rawDesc
)

func file_email_v1_email_verification_service_proto_rawDescGZIP() []byte {
	file_email_v1_email_verification_service_proto_rawDescOnce.Do(func() {
		file_email_v1_email_verification_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_email_v1_email_verification_service_proto_rawDescData)
	})
	return file_email_v1_email_verification_service_proto_rawDescData
}

var file_email_v1_email_verification_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_email_v1_email_verification_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_email_v1_email_verification_service_proto_goTypes = []any{
	(SendVerificationCodeResponse_Result)(0),  // 0: flipcash.email.v1.SendVerificationCodeResponse.Result
	(CheckVerificationCodeResponse_Result)(0), // 1: flipcash.email.v1.CheckVerificationCodeResponse.Result
	(UnlinkResponse_Result)(0),                // 2: flipcash.email.v1.UnlinkResponse.Result
	(*SendVerificationCodeRequest)(nil),       // 3: flipcash.email.v1.SendVerificationCodeRequest
	(*SendVerificationCodeResponse)(nil),      // 4: flipcash.email.v1.SendVerificationCodeResponse
	(*CheckVerificationCodeRequest)(nil),      // 5: flipcash.email.v1.CheckVerificationCodeRequest
	(*CheckVerificationCodeResponse)(nil),     // 6: flipcash.email.v1.CheckVerificationCodeResponse
	(*UnlinkRequest)(nil),                     // 7: flipcash.email.v1.UnlinkRequest
	(*UnlinkResponse)(nil),                    // 8: flipcash.email.v1.UnlinkResponse
	(*EmailAddress)(nil),                      // 9: flipcash.email.v1.EmailAddress
	(*v1.Auth)(nil),                           // 10: flipcash.common.v1.Auth
	(*VerificationCode)(nil),                  // 11: flipcash.email.v1.VerificationCode
}
var file_email_v1_email_verification_service_proto_depIdxs = []int32{
	9,  // 0: flipcash.email.v1.SendVerificationCodeRequest.email_address:type_name -> flipcash.email.v1.EmailAddress
	10, // 1: flipcash.email.v1.SendVerificationCodeRequest.auth:type_name -> flipcash.common.v1.Auth
	0,  // 2: flipcash.email.v1.SendVerificationCodeResponse.result:type_name -> flipcash.email.v1.SendVerificationCodeResponse.Result
	9,  // 3: flipcash.email.v1.CheckVerificationCodeRequest.email_address:type_name -> flipcash.email.v1.EmailAddress
	11, // 4: flipcash.email.v1.CheckVerificationCodeRequest.code:type_name -> flipcash.email.v1.VerificationCode
	10, // 5: flipcash.email.v1.CheckVerificationCodeRequest.auth:type_name -> flipcash.common.v1.Auth
	1,  // 6: flipcash.email.v1.CheckVerificationCodeResponse.result:type_name -> flipcash.email.v1.CheckVerificationCodeResponse.Result
	9,  // 7: flipcash.email.v1.UnlinkRequest.email_address:type_name -> flipcash.email.v1.EmailAddress
	10, // 8: flipcash.email.v1.UnlinkRequest.auth:type_name -> flipcash.common.v1.Auth
	2,  // 9: flipcash.email.v1.UnlinkResponse.result:type_name -> flipcash.email.v1.UnlinkResponse.Result
	3,  // 10: flipcash.email.v1.EmailVerification.SendVerificationCode:input_type -> flipcash.email.v1.SendVerificationCodeRequest
	5,  // 11: flipcash.email.v1.EmailVerification.CheckVerificationCode:input_type -> flipcash.email.v1.CheckVerificationCodeRequest
	7,  // 12: flipcash.email.v1.EmailVerification.Unlink:input_type -> flipcash.email.v1.UnlinkRequest
	4,  // 13: flipcash.email.v1.EmailVerification.SendVerificationCode:output_type -> flipcash.email.v1.SendVerificationCodeResponse
	6,  // 14: flipcash.email.v1.EmailVerification.CheckVerificationCode:output_type -> flipcash.email.v1.CheckVerificationCodeResponse
	8,  // 15: flipcash.email.v1.EmailVerification.Unlink:output_type -> flipcash.email.v1.UnlinkResponse
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_email_v1_email_verification_service_proto_init() }
func file_email_v1_email_verification_service_proto_init() {
	if File_email_v1_email_verification_service_proto != nil {
		return
	}
	file_email_v1_model_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_email_v1_email_verification_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_email_v1_email_verification_service_proto_goTypes,
		DependencyIndexes: file_email_v1_email_verification_service_proto_depIdxs,
		EnumInfos:         file_email_v1_email_verification_service_proto_enumTypes,
		MessageInfos:      file_email_v1_email_verification_service_proto_msgTypes,
	}.Build()
	File_email_v1_email_verification_service_proto = out.File
	file_email_v1_email_verification_service_proto_rawDesc = nil
	file_email_v1_email_verification_service_proto_goTypes = nil
	file_email_v1_email_verification_service_proto_depIdxs = nil
}
