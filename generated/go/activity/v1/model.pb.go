// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: activity/v1/model.proto

package activitypb

import (
	v1 "github.com/code-payments/flipcash-protobuf-api/generated/go/common/v1"
	v11 "github.com/code-payments/flipcash-protobuf-api/generated/go/pool/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ActivityFeedType enables multiple activity feeds, where notifications may be
// split across different parts of the app
type ActivityFeedType int32

const (
	ActivityFeedType_UNKNOWN             ActivityFeedType = 0
	ActivityFeedType_TRANSACTION_HISTORY ActivityFeedType = 1 // Activity feed displayed under the Balance tab
)

// Enum value maps for ActivityFeedType.
var (
	ActivityFeedType_name = map[int32]string{
		0: "UNKNOWN",
		1: "TRANSACTION_HISTORY",
	}
	ActivityFeedType_value = map[string]int32{
		"UNKNOWN":             0,
		"TRANSACTION_HISTORY": 1,
	}
)

func (x ActivityFeedType) Enum() *ActivityFeedType {
	p := new(ActivityFeedType)
	*p = x
	return p
}

func (x ActivityFeedType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityFeedType) Descriptor() protoreflect.EnumDescriptor {
	return file_activity_v1_model_proto_enumTypes[0].Descriptor()
}

func (ActivityFeedType) Type() protoreflect.EnumType {
	return &file_activity_v1_model_proto_enumTypes[0]
}

func (x ActivityFeedType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityFeedType.Descriptor instead.
func (ActivityFeedType) EnumDescriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{0}
}

// NotificationState determines the mutability of a notification, and whether
// client should attempt to refetch state.
type NotificationState int32

const (
	NotificationState_NOTIFICATION_STATE_UNKNOWN NotificationState = 0
	// Notification state will change based on some app action in the future
	NotificationState_NOTIFICATION_STATE_PENDING NotificationState = 1
	// Notification state will not change
	NotificationState_NOTIFICATION_STATE_COMPLETED NotificationState = 2
)

// Enum value maps for NotificationState.
var (
	NotificationState_name = map[int32]string{
		0: "NOTIFICATION_STATE_UNKNOWN",
		1: "NOTIFICATION_STATE_PENDING",
		2: "NOTIFICATION_STATE_COMPLETED",
	}
	NotificationState_value = map[string]int32{
		"NOTIFICATION_STATE_UNKNOWN":   0,
		"NOTIFICATION_STATE_PENDING":   1,
		"NOTIFICATION_STATE_COMPLETED": 2,
	}
)

func (x NotificationState) Enum() *NotificationState {
	p := new(NotificationState)
	*p = x
	return p
}

func (x NotificationState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationState) Descriptor() protoreflect.EnumDescriptor {
	return file_activity_v1_model_proto_enumTypes[1].Descriptor()
}

func (NotificationState) Type() protoreflect.EnumType {
	return &file_activity_v1_model_proto_enumTypes[1]
}

func (x NotificationState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationState.Descriptor instead.
func (NotificationState) EnumDescriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{1}
}

// The ID of the notification
type NotificationId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NotificationId) Reset() {
	*x = NotificationId{}
	mi := &file_activity_v1_model_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationId) ProtoMessage() {}

func (x *NotificationId) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationId.ProtoReflect.Descriptor instead.
func (*NotificationId) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{0}
}

func (x *NotificationId) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Notification is a message that is displayed in an activity feed
type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of this notification
	Id *NotificationId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The localized title text for the notification
	LocalizedText string `protobuf:"bytes,2,opt,name=localized_text,json=localizedText,proto3" json:"localized_text,omitempty"`
	// If a payment applies, the amount that was paid
	PaymentAmount *v1.CryptoPaymentAmount `protobuf:"bytes,3,opt,name=payment_amount,json=paymentAmount,proto3" json:"payment_amount,omitempty"`
	// The timestamp of this notification
	Ts *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=ts,proto3" json:"ts,omitempty"`
	// The state of this notification
	State NotificationState `protobuf:"varint,10,opt,name=state,proto3,enum=flipcash.activity.v1.NotificationState" json:"state,omitempty"`
	// Additional metadata for this notification specific to the notification
	//
	// Types that are assignable to AdditionalMetadata:
	//
	//	*Notification_WelcomeBonus
	//	*Notification_GaveCrypto
	//	*Notification_ReceivedCrypto
	//	*Notification_WithdrewCrypto
	//	*Notification_SentCrypto
	//	*Notification_DepositedCrypto
	//	*Notification_PaidCrypto
	//	*Notification_DistributedCrypto
	AdditionalMetadata isNotification_AdditionalMetadata `protobuf_oneof:"additional_metadata"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_activity_v1_model_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{1}
}

func (x *Notification) GetId() *NotificationId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Notification) GetLocalizedText() string {
	if x != nil {
		return x.LocalizedText
	}
	return ""
}

func (x *Notification) GetPaymentAmount() *v1.CryptoPaymentAmount {
	if x != nil {
		return x.PaymentAmount
	}
	return nil
}

func (x *Notification) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (x *Notification) GetState() NotificationState {
	if x != nil {
		return x.State
	}
	return NotificationState_NOTIFICATION_STATE_UNKNOWN
}

func (m *Notification) GetAdditionalMetadata() isNotification_AdditionalMetadata {
	if m != nil {
		return m.AdditionalMetadata
	}
	return nil
}

func (x *Notification) GetWelcomeBonus() *WelcomeBonusNotificationMetadata {
	if x, ok := x.GetAdditionalMetadata().(*Notification_WelcomeBonus); ok {
		return x.WelcomeBonus
	}
	return nil
}

func (x *Notification) GetGaveCrypto() *GaveCryptoNotificationMetadata {
	if x, ok := x.GetAdditionalMetadata().(*Notification_GaveCrypto); ok {
		return x.GaveCrypto
	}
	return nil
}

func (x *Notification) GetReceivedCrypto() *ReceivedCryptoNotificationMetadata {
	if x, ok := x.GetAdditionalMetadata().(*Notification_ReceivedCrypto); ok {
		return x.ReceivedCrypto
	}
	return nil
}

func (x *Notification) GetWithdrewCrypto() *WithdrewCryptoNotificationMetadata {
	if x, ok := x.GetAdditionalMetadata().(*Notification_WithdrewCrypto); ok {
		return x.WithdrewCrypto
	}
	return nil
}

func (x *Notification) GetSentCrypto() *SentCryptoNotificationMetadata {
	if x, ok := x.GetAdditionalMetadata().(*Notification_SentCrypto); ok {
		return x.SentCrypto
	}
	return nil
}

func (x *Notification) GetDepositedCrypto() *DepositedCryptoNotificationMetadata {
	if x, ok := x.GetAdditionalMetadata().(*Notification_DepositedCrypto); ok {
		return x.DepositedCrypto
	}
	return nil
}

func (x *Notification) GetPaidCrypto() *PaidCryptoNotificationMetadata {
	if x, ok := x.GetAdditionalMetadata().(*Notification_PaidCrypto); ok {
		return x.PaidCrypto
	}
	return nil
}

func (x *Notification) GetDistributedCrypto() *DistributedCryptoNotificationMetadata {
	if x, ok := x.GetAdditionalMetadata().(*Notification_DistributedCrypto); ok {
		return x.DistributedCrypto
	}
	return nil
}

type isNotification_AdditionalMetadata interface {
	isNotification_AdditionalMetadata()
}

type Notification_WelcomeBonus struct {
	WelcomeBonus *WelcomeBonusNotificationMetadata `protobuf:"bytes,5,opt,name=welcome_bonus,json=welcomeBonus,proto3,oneof"`
}

type Notification_GaveCrypto struct {
	GaveCrypto *GaveCryptoNotificationMetadata `protobuf:"bytes,6,opt,name=gave_crypto,json=gaveCrypto,proto3,oneof"`
}

type Notification_ReceivedCrypto struct {
	ReceivedCrypto *ReceivedCryptoNotificationMetadata `protobuf:"bytes,7,opt,name=received_crypto,json=receivedCrypto,proto3,oneof"`
}

type Notification_WithdrewCrypto struct {
	WithdrewCrypto *WithdrewCryptoNotificationMetadata `protobuf:"bytes,8,opt,name=withdrew_crypto,json=withdrewCrypto,proto3,oneof"`
}

type Notification_SentCrypto struct {
	SentCrypto *SentCryptoNotificationMetadata `protobuf:"bytes,9,opt,name=sent_crypto,json=sentCrypto,proto3,oneof"`
}

type Notification_DepositedCrypto struct {
	DepositedCrypto *DepositedCryptoNotificationMetadata `protobuf:"bytes,11,opt,name=deposited_crypto,json=depositedCrypto,proto3,oneof"`
}

type Notification_PaidCrypto struct {
	PaidCrypto *PaidCryptoNotificationMetadata `protobuf:"bytes,12,opt,name=paid_crypto,json=paidCrypto,proto3,oneof"`
}

type Notification_DistributedCrypto struct {
	DistributedCrypto *DistributedCryptoNotificationMetadata `protobuf:"bytes,13,opt,name=distributed_crypto,json=distributedCrypto,proto3,oneof"`
}

func (*Notification_WelcomeBonus) isNotification_AdditionalMetadata() {}

func (*Notification_GaveCrypto) isNotification_AdditionalMetadata() {}

func (*Notification_ReceivedCrypto) isNotification_AdditionalMetadata() {}

func (*Notification_WithdrewCrypto) isNotification_AdditionalMetadata() {}

func (*Notification_SentCrypto) isNotification_AdditionalMetadata() {}

func (*Notification_DepositedCrypto) isNotification_AdditionalMetadata() {}

func (*Notification_PaidCrypto) isNotification_AdditionalMetadata() {}

func (*Notification_DistributedCrypto) isNotification_AdditionalMetadata() {}

type WelcomeBonusNotificationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WelcomeBonusNotificationMetadata) Reset() {
	*x = WelcomeBonusNotificationMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WelcomeBonusNotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WelcomeBonusNotificationMetadata) ProtoMessage() {}

func (x *WelcomeBonusNotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WelcomeBonusNotificationMetadata.ProtoReflect.Descriptor instead.
func (*WelcomeBonusNotificationMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{2}
}

type GaveCryptoNotificationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GaveCryptoNotificationMetadata) Reset() {
	*x = GaveCryptoNotificationMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GaveCryptoNotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GaveCryptoNotificationMetadata) ProtoMessage() {}

func (x *GaveCryptoNotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GaveCryptoNotificationMetadata.ProtoReflect.Descriptor instead.
func (*GaveCryptoNotificationMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{3}
}

type ReceivedCryptoNotificationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReceivedCryptoNotificationMetadata) Reset() {
	*x = ReceivedCryptoNotificationMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceivedCryptoNotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivedCryptoNotificationMetadata) ProtoMessage() {}

func (x *ReceivedCryptoNotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivedCryptoNotificationMetadata.ProtoReflect.Descriptor instead.
func (*ReceivedCryptoNotificationMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{4}
}

type WithdrewCryptoNotificationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WithdrewCryptoNotificationMetadata) Reset() {
	*x = WithdrewCryptoNotificationMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WithdrewCryptoNotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrewCryptoNotificationMetadata) ProtoMessage() {}

func (x *WithdrewCryptoNotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrewCryptoNotificationMetadata.ProtoReflect.Descriptor instead.
func (*WithdrewCryptoNotificationMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{5}
}

type SentCryptoNotificationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The vault of the gift card account that was created for the cash link
	Vault *v1.PublicKey `protobuf:"bytes,1,opt,name=vault,proto3" json:"vault,omitempty"`
	// Whether the cancel action can be initiated by the user
	CanInitiateCancelAction bool `protobuf:"varint,2,opt,name=can_initiate_cancel_action,json=canInitiateCancelAction,proto3" json:"can_initiate_cancel_action,omitempty"`
}

func (x *SentCryptoNotificationMetadata) Reset() {
	*x = SentCryptoNotificationMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SentCryptoNotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SentCryptoNotificationMetadata) ProtoMessage() {}

func (x *SentCryptoNotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SentCryptoNotificationMetadata.ProtoReflect.Descriptor instead.
func (*SentCryptoNotificationMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{6}
}

func (x *SentCryptoNotificationMetadata) GetVault() *v1.PublicKey {
	if x != nil {
		return x.Vault
	}
	return nil
}

func (x *SentCryptoNotificationMetadata) GetCanInitiateCancelAction() bool {
	if x != nil {
		return x.CanInitiateCancelAction
	}
	return false
}

type DepositedCryptoNotificationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DepositedCryptoNotificationMetadata) Reset() {
	*x = DepositedCryptoNotificationMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DepositedCryptoNotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositedCryptoNotificationMetadata) ProtoMessage() {}

func (x *DepositedCryptoNotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositedCryptoNotificationMetadata.ProtoReflect.Descriptor instead.
func (*DepositedCryptoNotificationMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{7}
}

type PaidCryptoNotificationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to PaymentMetadata:
	//
	//	*PaidCryptoNotificationMetadata_Pool
	PaymentMetadata isPaidCryptoNotificationMetadata_PaymentMetadata `protobuf_oneof:"payment_metadata"`
}

func (x *PaidCryptoNotificationMetadata) Reset() {
	*x = PaidCryptoNotificationMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaidCryptoNotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaidCryptoNotificationMetadata) ProtoMessage() {}

func (x *PaidCryptoNotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaidCryptoNotificationMetadata.ProtoReflect.Descriptor instead.
func (*PaidCryptoNotificationMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{8}
}

func (m *PaidCryptoNotificationMetadata) GetPaymentMetadata() isPaidCryptoNotificationMetadata_PaymentMetadata {
	if m != nil {
		return m.PaymentMetadata
	}
	return nil
}

func (x *PaidCryptoNotificationMetadata) GetPool() *PaidCryptoNotificationMetadata_PoolPaymentMetadata {
	if x, ok := x.GetPaymentMetadata().(*PaidCryptoNotificationMetadata_Pool); ok {
		return x.Pool
	}
	return nil
}

type isPaidCryptoNotificationMetadata_PaymentMetadata interface {
	isPaidCryptoNotificationMetadata_PaymentMetadata()
}

type PaidCryptoNotificationMetadata_Pool struct {
	Pool *PaidCryptoNotificationMetadata_PoolPaymentMetadata `protobuf:"bytes,1,opt,name=pool,proto3,oneof"`
}

func (*PaidCryptoNotificationMetadata_Pool) isPaidCryptoNotificationMetadata_PaymentMetadata() {}

type DistributedCryptoNotificationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to DistributionMetadata:
	//
	//	*DistributedCryptoNotificationMetadata_Pool
	DistributionMetadata isDistributedCryptoNotificationMetadata_DistributionMetadata `protobuf_oneof:"distribution_metadata"`
}

func (x *DistributedCryptoNotificationMetadata) Reset() {
	*x = DistributedCryptoNotificationMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DistributedCryptoNotificationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributedCryptoNotificationMetadata) ProtoMessage() {}

func (x *DistributedCryptoNotificationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributedCryptoNotificationMetadata.ProtoReflect.Descriptor instead.
func (*DistributedCryptoNotificationMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{9}
}

func (m *DistributedCryptoNotificationMetadata) GetDistributionMetadata() isDistributedCryptoNotificationMetadata_DistributionMetadata {
	if m != nil {
		return m.DistributionMetadata
	}
	return nil
}

func (x *DistributedCryptoNotificationMetadata) GetPool() *DistributedCryptoNotificationMetadata_PoolDistributionMetadata {
	if x, ok := x.GetDistributionMetadata().(*DistributedCryptoNotificationMetadata_Pool); ok {
		return x.Pool
	}
	return nil
}

type isDistributedCryptoNotificationMetadata_DistributionMetadata interface {
	isDistributedCryptoNotificationMetadata_DistributionMetadata()
}

type DistributedCryptoNotificationMetadata_Pool struct {
	Pool *DistributedCryptoNotificationMetadata_PoolDistributionMetadata `protobuf:"bytes,1,opt,name=pool,proto3,oneof"`
}

func (*DistributedCryptoNotificationMetadata_Pool) isDistributedCryptoNotificationMetadata_DistributionMetadata() {
}

// Payment metadata for betting pools
type PaidCryptoNotificationMetadata_PoolPaymentMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The pool that was entered for this payment
	PoolId *v11.PoolId `protobuf:"bytes,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
}

func (x *PaidCryptoNotificationMetadata_PoolPaymentMetadata) Reset() {
	*x = PaidCryptoNotificationMetadata_PoolPaymentMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaidCryptoNotificationMetadata_PoolPaymentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaidCryptoNotificationMetadata_PoolPaymentMetadata) ProtoMessage() {}

func (x *PaidCryptoNotificationMetadata_PoolPaymentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaidCryptoNotificationMetadata_PoolPaymentMetadata.ProtoReflect.Descriptor instead.
func (*PaidCryptoNotificationMetadata_PoolPaymentMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{8, 0}
}

func (x *PaidCryptoNotificationMetadata_PoolPaymentMetadata) GetPoolId() *v11.PoolId {
	if x != nil {
		return x.PoolId
	}
	return nil
}

// Distribution metadata for betting pools
type DistributedCryptoNotificationMetadata_PoolDistributionMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The pool where funds were distributed from
	PoolId *v11.PoolId `protobuf:"bytes,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	// The outcome for this pool for the user that indicates the reason for
	// receiving the distribution.
	Outcome v11.UserOutcome `protobuf:"varint,2,opt,name=outcome,proto3,enum=flipcash.pool.v1.UserOutcome" json:"outcome,omitempty"`
}

func (x *DistributedCryptoNotificationMetadata_PoolDistributionMetadata) Reset() {
	*x = DistributedCryptoNotificationMetadata_PoolDistributionMetadata{}
	mi := &file_activity_v1_model_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DistributedCryptoNotificationMetadata_PoolDistributionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributedCryptoNotificationMetadata_PoolDistributionMetadata) ProtoMessage() {}

func (x *DistributedCryptoNotificationMetadata_PoolDistributionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_activity_v1_model_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributedCryptoNotificationMetadata_PoolDistributionMetadata.ProtoReflect.Descriptor instead.
func (*DistributedCryptoNotificationMetadata_PoolDistributionMetadata) Descriptor() ([]byte, []int) {
	return file_activity_v1_model_proto_rawDescGZIP(), []int{9, 0}
}

func (x *DistributedCryptoNotificationMetadata_PoolDistributionMetadata) GetPoolId() *v11.PoolId {
	if x != nil {
		return x.PoolId
	}
	return nil
}

func (x *DistributedCryptoNotificationMetadata_PoolDistributionMetadata) GetOutcome() v11.UserOutcome {
	if x != nil {
		return x.Outcome
	}
	return v11.UserOutcome(0)
}

var File_activity_v1_model_proto protoreflect.FileDescriptor

var file_activity_v1_model_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x66, 0x6c, 0x69, 0x70, 0x63,
	0x61, 0x73, 0x68, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x1a,
	0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x7a, 0x04, 0x10, 0x20,
	0x18, 0x20, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf1, 0x08, 0x0a, 0x0c, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73,
	0x68, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0x80, 0x02, 0x52, 0x0d,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x4e, 0x0a,
	0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0d,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a,
	0x02, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xb2, 0x01, 0x02, 0x08, 0x01, 0x52,
	0x02, 0x74, 0x73, 0x12, 0x47, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x82, 0x01, 0x02, 0x20, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x5d, 0x0a, 0x0d,
	0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x6c, 0x63, 0x6f,
	0x6d, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x77,
	0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x57, 0x0a, 0x0b, 0x67,
	0x61, 0x76, 0x65, 0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x76, 0x65, 0x43, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x61, 0x76, 0x65, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x12, 0x63, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x43, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x63, 0x0a, 0x0f, 0x77, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x65, 0x77, 0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x65, 0x77, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0e,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x65, 0x77, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x57,
	0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x65, 0x6e,
	0x74, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x66, 0x0a, 0x10, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x39, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x65, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12,
	0x57, 0x0a, 0x0b, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x69, 0x64,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61,
	0x69, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x12, 0x6c, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x11, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x42, 0x15, 0x0a, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x22, 0x0a,
	0x20, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x20, 0x0a, 0x1e, 0x47, 0x61, 0x76, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x24, 0x0a, 0x22, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x24, 0x0a, 0x22, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x65, 0x77, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x9c, 0x01, 0x0a, 0x1e, 0x53, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x05, 0x76, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x63, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74,
	0x65, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x63, 0x61, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x25,
	0x0a, 0x23, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xed, 0x01, 0x0a, 0x1e, 0x50, 0x61, 0x69, 0x64, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5e, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73,
	0x68, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x69, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x6f, 0x6f,
	0x6c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x1a, 0x52, 0x0a, 0x13, 0x50, 0x6f, 0x6f, 0x6c,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x3b, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x70, 0x6f, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x42, 0x17, 0x0a, 0x10,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0xd0, 0x02, 0x0a, 0x25, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x64, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x6a, 0x0a, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e,
	0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73, 0x68, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c, 0x1a, 0x9c, 0x01, 0x0a, 0x18,
	0x50, 0x6f, 0x6f, 0x6c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6c, 0x69, 0x70,
	0x63, 0x61, 0x73, 0x68, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f,
	0x6c, 0x49, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x70,
	0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61, 0x73,
	0x68, 0x2e, 0x70, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x75,
	0x74, 0x63, 0x6f, 0x6d, 0x65, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x82, 0x01, 0x04, 0x18, 0x02, 0x18,
	0x04, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x42, 0x1c, 0x0a, 0x15, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x2a, 0x38, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x48, 0x49, 0x53, 0x54, 0x4f, 0x52, 0x59,
	0x10, 0x01, 0x2a, 0x75, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x4e, 0x4f, 0x54, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f,
	0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x42, 0x8b, 0x01, 0x0a, 0x24, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x69, 0x6e, 0x63, 0x2e, 0x66, 0x6c, 0x69, 0x70, 0x63, 0x61,
	0x73, 0x68, 0x2e, 0x67, 0x65, 0x6e, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x5a, 0x52, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x6f, 0x64, 0x65, 0x2d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x66, 0x6c, 0x69,
	0x70, 0x63, 0x61, 0x73, 0x68, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x61,
	0x70, 0x69, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x70, 0x62, 0xa2, 0x02, 0x0e, 0x46, 0x43, 0x50, 0x42, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_activity_v1_model_proto_rawDescOnce sync.Once
	file_activity_v1_model_proto_rawDescData = file_activity_v1_model_proto_rawDesc
)

func file_activity_v1_model_proto_rawDescGZIP() []byte {
	file_activity_v1_model_proto_rawDescOnce.Do(func() {
		file_activity_v1_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_activity_v1_model_proto_rawDescData)
	})
	return file_activity_v1_model_proto_rawDescData
}

var file_activity_v1_model_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_activity_v1_model_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_activity_v1_model_proto_goTypes = []any{
	(ActivityFeedType)(0),                                                  // 0: flipcash.activity.v1.ActivityFeedType
	(NotificationState)(0),                                                 // 1: flipcash.activity.v1.NotificationState
	(*NotificationId)(nil),                                                 // 2: flipcash.activity.v1.NotificationId
	(*Notification)(nil),                                                   // 3: flipcash.activity.v1.Notification
	(*WelcomeBonusNotificationMetadata)(nil),                               // 4: flipcash.activity.v1.WelcomeBonusNotificationMetadata
	(*GaveCryptoNotificationMetadata)(nil),                                 // 5: flipcash.activity.v1.GaveCryptoNotificationMetadata
	(*ReceivedCryptoNotificationMetadata)(nil),                             // 6: flipcash.activity.v1.ReceivedCryptoNotificationMetadata
	(*WithdrewCryptoNotificationMetadata)(nil),                             // 7: flipcash.activity.v1.WithdrewCryptoNotificationMetadata
	(*SentCryptoNotificationMetadata)(nil),                                 // 8: flipcash.activity.v1.SentCryptoNotificationMetadata
	(*DepositedCryptoNotificationMetadata)(nil),                            // 9: flipcash.activity.v1.DepositedCryptoNotificationMetadata
	(*PaidCryptoNotificationMetadata)(nil),                                 // 10: flipcash.activity.v1.PaidCryptoNotificationMetadata
	(*DistributedCryptoNotificationMetadata)(nil),                          // 11: flipcash.activity.v1.DistributedCryptoNotificationMetadata
	(*PaidCryptoNotificationMetadata_PoolPaymentMetadata)(nil),             // 12: flipcash.activity.v1.PaidCryptoNotificationMetadata.PoolPaymentMetadata
	(*DistributedCryptoNotificationMetadata_PoolDistributionMetadata)(nil), // 13: flipcash.activity.v1.DistributedCryptoNotificationMetadata.PoolDistributionMetadata
	(*v1.CryptoPaymentAmount)(nil),                                         // 14: flipcash.common.v1.CryptoPaymentAmount
	(*timestamppb.Timestamp)(nil),                                          // 15: google.protobuf.Timestamp
	(*v1.PublicKey)(nil),                                                   // 16: flipcash.common.v1.PublicKey
	(*v11.PoolId)(nil),                                                     // 17: flipcash.pool.v1.PoolId
	(v11.UserOutcome)(0),                                                   // 18: flipcash.pool.v1.UserOutcome
}
var file_activity_v1_model_proto_depIdxs = []int32{
	2,  // 0: flipcash.activity.v1.Notification.id:type_name -> flipcash.activity.v1.NotificationId
	14, // 1: flipcash.activity.v1.Notification.payment_amount:type_name -> flipcash.common.v1.CryptoPaymentAmount
	15, // 2: flipcash.activity.v1.Notification.ts:type_name -> google.protobuf.Timestamp
	1,  // 3: flipcash.activity.v1.Notification.state:type_name -> flipcash.activity.v1.NotificationState
	4,  // 4: flipcash.activity.v1.Notification.welcome_bonus:type_name -> flipcash.activity.v1.WelcomeBonusNotificationMetadata
	5,  // 5: flipcash.activity.v1.Notification.gave_crypto:type_name -> flipcash.activity.v1.GaveCryptoNotificationMetadata
	6,  // 6: flipcash.activity.v1.Notification.received_crypto:type_name -> flipcash.activity.v1.ReceivedCryptoNotificationMetadata
	7,  // 7: flipcash.activity.v1.Notification.withdrew_crypto:type_name -> flipcash.activity.v1.WithdrewCryptoNotificationMetadata
	8,  // 8: flipcash.activity.v1.Notification.sent_crypto:type_name -> flipcash.activity.v1.SentCryptoNotificationMetadata
	9,  // 9: flipcash.activity.v1.Notification.deposited_crypto:type_name -> flipcash.activity.v1.DepositedCryptoNotificationMetadata
	10, // 10: flipcash.activity.v1.Notification.paid_crypto:type_name -> flipcash.activity.v1.PaidCryptoNotificationMetadata
	11, // 11: flipcash.activity.v1.Notification.distributed_crypto:type_name -> flipcash.activity.v1.DistributedCryptoNotificationMetadata
	16, // 12: flipcash.activity.v1.SentCryptoNotificationMetadata.vault:type_name -> flipcash.common.v1.PublicKey
	12, // 13: flipcash.activity.v1.PaidCryptoNotificationMetadata.pool:type_name -> flipcash.activity.v1.PaidCryptoNotificationMetadata.PoolPaymentMetadata
	13, // 14: flipcash.activity.v1.DistributedCryptoNotificationMetadata.pool:type_name -> flipcash.activity.v1.DistributedCryptoNotificationMetadata.PoolDistributionMetadata
	17, // 15: flipcash.activity.v1.PaidCryptoNotificationMetadata.PoolPaymentMetadata.pool_id:type_name -> flipcash.pool.v1.PoolId
	17, // 16: flipcash.activity.v1.DistributedCryptoNotificationMetadata.PoolDistributionMetadata.pool_id:type_name -> flipcash.pool.v1.PoolId
	18, // 17: flipcash.activity.v1.DistributedCryptoNotificationMetadata.PoolDistributionMetadata.outcome:type_name -> flipcash.pool.v1.UserOutcome
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_activity_v1_model_proto_init() }
func file_activity_v1_model_proto_init() {
	if File_activity_v1_model_proto != nil {
		return
	}
	file_activity_v1_model_proto_msgTypes[1].OneofWrappers = []any{
		(*Notification_WelcomeBonus)(nil),
		(*Notification_GaveCrypto)(nil),
		(*Notification_ReceivedCrypto)(nil),
		(*Notification_WithdrewCrypto)(nil),
		(*Notification_SentCrypto)(nil),
		(*Notification_DepositedCrypto)(nil),
		(*Notification_PaidCrypto)(nil),
		(*Notification_DistributedCrypto)(nil),
	}
	file_activity_v1_model_proto_msgTypes[8].OneofWrappers = []any{
		(*PaidCryptoNotificationMetadata_Pool)(nil),
	}
	file_activity_v1_model_proto_msgTypes[9].OneofWrappers = []any{
		(*DistributedCryptoNotificationMetadata_Pool)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_activity_v1_model_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_activity_v1_model_proto_goTypes,
		DependencyIndexes: file_activity_v1_model_proto_depIdxs,
		EnumInfos:         file_activity_v1_model_proto_enumTypes,
		MessageInfos:      file_activity_v1_model_proto_msgTypes,
	}.Build()
	File_activity_v1_model_proto = out.File
	file_activity_v1_model_proto_rawDesc = nil
	file_activity_v1_model_proto_goTypes = nil
	file_activity_v1_model_proto_depIdxs = nil
}
