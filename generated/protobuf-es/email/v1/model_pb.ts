// @generated by protoc-gen-es v1.10.1 with parameter "target=ts"
// @generated from file email/v1/model.proto (package flipcash.email.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * EmailAddress is an email address
 *
 * @generated from message flipcash.email.v1.EmailAddress
 */
export class EmailAddress extends Message<EmailAddress> {
  /**
   * @generated from field: string value = 1;
   */
  value = "";

  constructor(data?: PartialMessage<EmailAddress>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "flipcash.email.v1.EmailAddress";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EmailAddress {
    return new EmailAddress().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EmailAddress {
    return new EmailAddress().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EmailAddress {
    return new EmailAddress().fromJsonString(jsonString, options);
  }

  static equals(a: EmailAddress | PlainMessage<EmailAddress> | undefined, b: EmailAddress | PlainMessage<EmailAddress> | undefined): boolean {
    return proto3.util.equals(EmailAddress, a, b);
  }
}

/**
 * VerificationCode is a 4-10 digit numerical code for verification
 *
 * @generated from message flipcash.email.v1.VerificationCode
 */
export class VerificationCode extends Message<VerificationCode> {
  /**
   * @generated from field: string value = 2;
   */
  value = "";

  constructor(data?: PartialMessage<VerificationCode>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "flipcash.email.v1.VerificationCode";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerificationCode {
    return new VerificationCode().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerificationCode {
    return new VerificationCode().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerificationCode {
    return new VerificationCode().fromJsonString(jsonString, options);
  }

  static equals(a: VerificationCode | PlainMessage<VerificationCode> | undefined, b: VerificationCode | PlainMessage<VerificationCode> | undefined): boolean {
    return proto3.util.equals(VerificationCode, a, b);
  }
}

