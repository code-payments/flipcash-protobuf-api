// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file ramp/v1/ramp_service.proto (package flipcash.ramp.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { ApiKey, Jwt } from "./model_pb";
import { Auth } from "../../common/v1/common_pb";

/**
 * @generated from message flipcash.ramp.v1.GetJwtRequest
 */
export class GetJwtRequest extends Message<GetJwtRequest> {
  /**
   * @generated from field: flipcash.ramp.v1.ApiKey api_key = 1;
   */
  apiKey?: ApiKey;

  /**
   * @generated from field: string method = 2;
   */
  method = "";

  /**
   * @generated from field: string host = 3;
   */
  host = "";

  /**
   * @generated from field: string path = 4;
   */
  path = "";

  /**
   * @generated from field: flipcash.common.v1.Auth auth = 5;
   */
  auth?: Auth;

  constructor(data?: PartialMessage<GetJwtRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "flipcash.ramp.v1.GetJwtRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "api_key", kind: "message", T: ApiKey },
    { no: 2, name: "method", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "host", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "auth", kind: "message", T: Auth },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetJwtRequest {
    return new GetJwtRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetJwtRequest {
    return new GetJwtRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetJwtRequest {
    return new GetJwtRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetJwtRequest | PlainMessage<GetJwtRequest> | undefined, b: GetJwtRequest | PlainMessage<GetJwtRequest> | undefined): boolean {
    return proto3.util.equals(GetJwtRequest, a, b);
  }
}

/**
 * @generated from message flipcash.ramp.v1.GetJwtResponse
 */
export class GetJwtResponse extends Message<GetJwtResponse> {
  /**
   * @generated from field: flipcash.ramp.v1.GetJwtResponse.Result result = 1;
   */
  result = GetJwtResponse_Result.OK;

  /**
   * @generated from field: flipcash.ramp.v1.Jwt jwt = 2;
   */
  jwt?: Jwt;

  constructor(data?: PartialMessage<GetJwtResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "flipcash.ramp.v1.GetJwtResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "result", kind: "enum", T: proto3.getEnumType(GetJwtResponse_Result) },
    { no: 2, name: "jwt", kind: "message", T: Jwt },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetJwtResponse {
    return new GetJwtResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetJwtResponse {
    return new GetJwtResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetJwtResponse {
    return new GetJwtResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetJwtResponse | PlainMessage<GetJwtResponse> | undefined, b: GetJwtResponse | PlainMessage<GetJwtResponse> | undefined): boolean {
    return proto3.util.equals(GetJwtResponse, a, b);
  }
}

/**
 * @generated from enum flipcash.ramp.v1.GetJwtResponse.Result
 */
export enum GetJwtResponse_Result {
  /**
   * @generated from enum value: OK = 0;
   */
  OK = 0,

  /**
   * @generated from enum value: DENIED = 1;
   */
  DENIED = 1,

  /**
   * @generated from enum value: UNSUPPORTED_PROVIDER = 2;
   */
  UNSUPPORTED_PROVIDER = 2,

  /**
   * @generated from enum value: INVALID_API_KEY = 3;
   */
  INVALID_API_KEY = 3,

  /**
   * @generated from enum value: PHONE_VERIFICATION_REQUIRED = 4;
   */
  PHONE_VERIFICATION_REQUIRED = 4,

  /**
   * @generated from enum value: EMAIL_VERIFICATION_REQUIRED = 5;
   */
  EMAIL_VERIFICATION_REQUIRED = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(GetJwtResponse_Result)
proto3.util.setEnumType(GetJwtResponse_Result, "flipcash.ramp.v1.GetJwtResponse.Result", [
  { no: 0, name: "OK" },
  { no: 1, name: "DENIED" },
  { no: 2, name: "UNSUPPORTED_PROVIDER" },
  { no: 3, name: "INVALID_API_KEY" },
  { no: 4, name: "PHONE_VERIFICATION_REQUIRED" },
  { no: 5, name: "EMAIL_VERIFICATION_REQUIRED" },
]);

